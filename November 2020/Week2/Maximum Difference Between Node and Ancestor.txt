/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define L(x) (x->left)
#define R(x) (x->right)
#define V(x) (x->val)
class Solution {
private:
    int mini=pow(10,5)+1,maks=-1,ans=0;
    void minmax(TreeNode* root, int mini, int maks)
    {
        if(!root)
            return;
        if((mini != pow(10,5)+1) && (maks!=-1))
        {
            if(ans < max(abs(V(root)-mini),abs(V(root)-maks)))
                ans=max(abs(V(root)-mini),abs(V(root)-maks));
        }
        minmax(L(root),min(mini,V(root)),max(maks,V(root)));
        minmax(R(root),min(mini,V(root)),max(maks,V(root)));
        return;
    }
public:
    int maxAncestorDiff(TreeNode* root) {
        if(!root)
            return 0;
        minmax(root,mini,maks);
        return ans;
    }
};