/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        double num_1 = 0, num_2 = 0, sum; 
        ListNode *res,*temp;
        vector<double> arr;
        res = new ListNode();
        res->next = NULL;
        temp = res;
        while(l1)
        {   
            num_1 = l1->val + 10*num_1;
            l1 = l1 -> next;
        }
        while(l2)
        {
            num_2 = l2->val + 10*num_2;
            l2 = l2 -> next;
        }
        sum = num_1 +num_2;
        if(sum == 0)
        {
            temp->next = new ListNode(0,NULL);
        }
        while(sum!=0)
        {
            arr.push_back(sum%10);
            sum/=10;
            sum = (long int) sum;
        }
        reverse(arr.begin(),arr.end());
        for(long int i : arr)
        {
            temp->next = new ListNode(i,NULL);
            temp = temp->next;
        }
        
        return res->next;
    }
};