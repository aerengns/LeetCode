/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define L(x) (x->left)
#define R(x) (x->right)
#define V(x) (x->val)
class Solution {
private:
    int sum(TreeNode* root)
    {
        if(root == NULL)
            return 0;
        else
            return V(root)+sum(L(root))+sum(R(root));
    }
public:
    int findTilt(TreeNode* root) {
        if(root == NULL)
            return 0;
        else
        {   
            return abs(sum(L(root))-sum(R(root)))+findTilt(L(root))+findTilt(R(root));
            
        }
            
    }
};